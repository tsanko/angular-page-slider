
/*global xdescribe, spyOn */

'use strict';

xdescribe('Directive: svgImage', function() {

	var $rootScope, $compile, element, scope, $httpBackend, apiUrl, data;

	beforeEach(function() {
		module('TT.angularPageSlider');

		inject(function($injector) {
			$rootScope = $injector.get('$rootScope');
			$compile = $injector.get('$compile');
			$httpBackend = $injector.get('$httpBackend');
			//apiUrl = $injector.get('apiUrl');
		});

		scope = $rootScope.$new();
		element = angular.element('<svg-image src="../images/chevron.svg" class="svg"></svg-image>');
		element = $compile(element)(scope);

		spyOn(scope, 'manipulateImgNode').andCallThrough();
		//$httpBackend.whenGET(apiUrl + 'me').respond(200, {});

		data = '<?xml version="1.0" encoding="utf-8"?>' +
		       	'<!-- Generated by IcoMoon.io -->' +
				'<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">' +
				'<svg version="1.1" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" ' +
					'width="512" height="1024" viewBox="0 0 512 1024">' +
				'<g id="icomoon-ignore"></g>' +
				'<path class="chevron" d="M268.412 512c-241.111-401.11-5.323-9.811-244.479-407.922-31.626-37.517-23.933-88.633 ' +
										'27.369-104.078h149.431l311.267 512c-305.789 495.321-16.262 24.286-311.267 ' +
										'512h-142.628c-44.483 0-66.906-40.978-44.483-88.369 221.851-362.756 44.302-70.556 ' +
										'254.789-423.631z"></path>' +
				'</svg>';
		$httpBackend.expectGET('../images/chevron.svg').respond(200, data);
	});

	afterEach(function() {
		$httpBackend.verifyNoOutstandingExpectation();
		$httpBackend.verifyNoOutstandingRequest();
	});

	it('should call manipulateImgNode at least once', function () {
		$httpBackend.flush();
		expect(scope.manipulateImgNode.callCount).toBe(1);
	});

	it('should return correct result', function () {
		$httpBackend.flush();
		var result = scope.manipulateImgNode(data, element);
		expect(result).toBeDefined();
	});

	it('should define classes', function () {
		$httpBackend.flush();
		var result = scope.manipulateImgNode(data, element);
		var classList = ['svg'];
		expect(result.classList[0]).toBe(classList[0]);
	});
});
